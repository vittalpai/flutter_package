name: Android Test
on: 
  workflow_dispatch:
    branches:
    - master
jobs:
  build:
    runs-on: macos-latest
    defaults:
      run:
        working-directory: Demo
    strategy:
      matrix:
        api-level: [21, 29]
        target: [default]
    steps:
    - uses: actions/checkout@v1
    - uses: subosito/flutter-action@v1
      with:
        flutter-version: '1.22.4'
        channel: 'stable'
    - name: Install Docker
      run: |
        brew cask install docker-toolbox
        docker-machine create --driver "virtualbox" TestApp
        eval "$(docker-machine env TestApp)"
        docker-machine ls

        docker pull ibmcom/ibm-mobilefoundation-ce:latest

        CONTIANER_ID=$(docker run -d -p 9080:9080 -p 9443:9443 -e MFPF_ANALYTICS_PROTOCOL=http -e ANALYTICS_SVC_NAME=localhost -e ANALYTICS_PORT=9080 -e MFPF_SERVER_PROTOCOL=http -e ADMIN_HOST=localhost -e MFPF_SERVER_PORT=9080 -e RUNTIME_SVC_NAME=localhost -e MFPF_ANALYTICS_RECVR_HOST=localhost ibmcom/ibm-mobilefoundation-ce)
        docker ps
        echo "CONTIANER_ID=${CONTIANER_ID}" >> $GITHUB_ENV
        echo "Container ID: ${CONTIANER_ID}"

        sleep 120

        echo "Getting the logs"
        docker logs ${CONTIANER_ID}

        curl http://192.168.99.100:9080/mfp/api/az/v1/token


        cat <<EOF > ./registerconfig.json
        {
          "applicationKey":{
              "version":"1.0.0",
              "clientPlatform":"ios",
              "bundleId":"com.example.Demo"
          },
          "displayName":"RunnerDemo"
        }
        EOF
        curl -X POST "http://192.168.99.100:9080/mfpadmin/management-apis/2.0/runtimes/mfp/applications?async=false&locale=en_US" -H "Content-Type: application/json" --user "admin:admin" -H "cache-control: no-cache" -d @./registerconfig.json -o output.json
        cat ./output.json
    - name: Run Tests on Android
      uses: reactivecircus/android-emulator-runner@v1
      with:
        api-level: ${{ matrix.api-level }}
        target: ${{ matrix.target }}
        arch: x86_64
        profile: Nexus 6
        script: flutter drive --target=test_driver/app.dart